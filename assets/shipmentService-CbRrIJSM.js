import{t}from"./index-59738moQ.js";import"./vendor-react-c2Vhr46D.js";import"./vendor-Do_qGNvM.js";import"./vendor-ui-CttiZxwU.js";var e=Object.defineProperty,s=(t,s,i)=>((t,s,i)=>s in t?e(t,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[s]=i)(t,"symbol"!=typeof s?s+"":s,i);const i=new class{constructor(){s(this,"shipments",[]),s(this,"storage",window.localStorage),s(this,"DB_KEY","e_parsel_shipments"),this.loadFromStorage()}loadFromStorage(){const t=this.storage.getItem(this.DB_KEY);if(t)try{this.shipments=JSON.parse(t)}catch(e){this.shipments=[]}}saveToStorage(){this.storage.setItem(this.DB_KEY,JSON.stringify(this.shipments))}getAll(t){return this.shipments.filter((e=>e.userId===t))}getById(t,e){return this.shipments.find((s=>s.id===t&&s.userId===e))}getByTrackingCode(t){return this.shipments.find((e=>e.trackingCode===t))}add(t){return this.shipments.push(t),this.saveToStorage(),t}update(t){const e=this.shipments.findIndex((e=>e.id===t.id&&e.userId===t.userId));return-1!==e&&(this.shipments[e]=t,this.saveToStorage(),!0)}delete(t,e){const s=this.shipments.findIndex((s=>s.id===t&&s.userId===e));return-1!==s&&(this.shipments.splice(s,1),this.saveToStorage(),!0)}addEvent(t,e){const s=this.shipments.find((e=>e.id===t));if(s){switch(s.events.push(e),e.status){case"Picked up":s.status="picked_up";break;case"In transit":s.status="in_transit";break;case"Delivered":s.status="delivered";break;case"Exception":s.status="exception";break;case"Cancelled":s.status="cancelled"}return this.saveToStorage(),!0}return!1}},r=async e=>{try{return await new Promise((t=>setTimeout(t,500))),i.getAll(e)}catch(s){return t({title:"Error Fetching Shipments",description:"Unable to retrieve your shipments. Please try again.",variant:"destructive"}),[]}},n=async(e,s)=>{try{return await new Promise((t=>setTimeout(t,300))),i.getById(e,s)||null}catch(r){return t({title:"Error Fetching Shipment",description:"Unable to retrieve shipment details. Please try again.",variant:"destructive"}),null}},a=async e=>{try{return await new Promise((t=>setTimeout(t,800))),i.getByTrackingCode(e)||null}catch(s){return t({title:"Tracking Error",description:"Unable to track this shipment. Please verify the tracking code.",variant:"destructive"}),null}},o=async(e,s,r,n)=>{try{await new Promise((t=>setTimeout(t,500)));const t=i.getById(e,s);return!!t&&(t.status=r,n&&t.events.push(n),i.update(t))}catch(a){return t({title:"Update Failed",description:"Unable to update shipment status. Please try again.",variant:"destructive"}),!1}},d=async e=>{try{await new Promise((t=>setTimeout(t,1e3)));const t={...e,id:`SHIP-${Math.floor(1e6*Math.random())}`,createdAt:(new Date).toISOString(),events:[{date:(new Date).toISOString(),location:e.pickup,status:"Shipment created",description:"Shipment has been registered in our system"}],status:"pending"};return i.add(t),t}catch(s){return t({title:"Save Failed",description:"Unable to save shipment. Please try again.",variant:"destructive"}),null}};export{n as getShipmentById,r as getShipments,d as saveShipment,a as trackShipment,o as updateShipmentStatus};
